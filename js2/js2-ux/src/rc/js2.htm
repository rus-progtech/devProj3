<!-- @noSnoop -->
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="/module/js2/rc/js2.css" type="text/css"/>

  <script type="text/javascript">
    var require = {
      paths: {
        //pointing nmodule at /module is a Niagara convention, allowing us to
        //refer to module resources without having RequireJS get hung up on
        //the use of absolute paths everywhere.
        "nmodule": "/module",
        "baja": "/module/bajaScript/rc/plugin/baja",
        "bajaScript": "/module/bajaScript/rc",
        "bajaux": "/module/bajaux/rc",
        "lex": "/module/js/rc/lex/lexplugin",
        "log": "/module/js/rc/log/logPlugin",
        "css": "/module/js/com/tridium/js/ext/require/css",

        "jquery": "/module/js/rc/jquery/jquery",
        "Handlebars": "/module/js/rc/handlebars/handlebars",
        "Promise": "/module/js/rc/bluebird/bluebird",

        // these are runtime dependencies for require-handlebars-plugin
        "hbs": "/module/js/rc/require-handlebars-plugin/hbs",
        "i18nprecompile": "/module/js/rc/require-handlebars-plugin/hbs/i18nprecompile",
        "json2": "/module/js/rc/require-handlebars-plugin/hbs/json2",
        "underscore": "/module/js/rc/underscore/underscore"
      },

      hbs: {
        disableI18n: true
      }
    }
  </script>
  <script type="text/javascript"
          data-main="/module/js2/rc/js2.run.js"
          src="/module/js/com/tridium/js/ext/require/require.min.js"></script>
</head>
<body class="widgetDemo">
  <h1>js2 Progtech</h1>
  <p>
    A sublime Niagara web app brought to you by PTC.
  </p>
  <div id="template">Just a sec...</div>

  
    <p>
      Here's a small demonstration of how a <code>bajaux</code> Widget works.
    </p>
    <p>
      The widget will be instantiated in the <code>#widget</code> div below by
      calling the <code>initialize()</code> method, then have a value loaded
      with <code>load()</code>.
    </p>
    <p>
      Every time a button is clicked, the widget will be marked as modified,
      which triggers a <code>bajaux:modify</code> event. We use jQuery to
      listen for this event. Each time the event is triggered, the latest value
      is <code>read()</code> from the widget and used to update the
      <code>#description</code> element.
    </p>
    <p>
      Just give it a try, and take a look at the <a href="Js2Widget.js">
      Widget source</a> and the <a href="js2.run.js">page source</a> to
      see how it works!
    </p>

    <h2>js2 is... <span id="description"></span>!</h2>
    <div id="widget">Just a sec...</div>
  
  
</body>
</html>
